{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where the resources of this template will be deployed to"
      },
      "defaultValue": "eastus"
    },
    "vnetRG": {
      "type": "string",
      "metadata": {
        "description": "Resoure group name where the virtual network is located."
      },
      "defaultValue": "photoscan-rg01-eus"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "photoscan-vnet",
      "metadata": {
        "description": "Name of the the Virtual Network where the subnet will be added"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "test-sn",
      "metadata": {
        "description": "Existing subnet name"
      }
    },
    "subnetIpAddressSuffix": {
      "type": "string",
      "defaultValue": "10.0.6",
      "metadata": {
        "description": "Clients will have static Ip addresses, this is the network part of a class C subnet."
      }
    },
    "startIpAddress": {
      "type": "int",
      "defaultValue": 50,
      "metadata": {
        "description": "Clients will have static Ip addresses, this is the start number of the host part of the class C ip address."
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of client nodes (100 or less)."
      },
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100
    },
    "vmNameSuffix": {
      "type": "string",
      "defaultValue":"vm",
      "metadata": {
        "description": "VM name suffix."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v3",
      "metadata": {
        "description": "sku to use for the storage nodes - only premium disks VMs are allowed"
      }
    },
    "VMImage": {
      "type": "string",
      "defaultValue": "CentOS_7.6",
      "allowedValues": [
        "CentOS_7.6"
      ],
      "metadata": {
        "description": "VM Image."
      }
    },
    "dnsDomainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "DNS domain name use to build the host's FQDN."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of admin account of the VMs, this name cannot be well know names, like root, admin, administrator, guest, etc."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    }
  },
  "variables": {
    "deploymentConfig": {
      "apiVersions": {
        "nicApiVersion": "2017-06-01",
        "deploymentApiVersion": "2018-05-01",
        "vmApiVersion": "2017-03-30",
        "publicIpApiVersion": "2017-11-01",
        "vnetApiVersion": "2016-03-30",
        "nsgApiVersion": "2017-06-01",
        "vmExtensionApiVersion": "2015-06-15",
        "subnetApiVersion": "2017-10-01",
        "applicationGwApiVersion": "2017-10-01",
        "availabilitySetApiVersion": "2017-03-30",
        "loadBalancerApiVersion":"2018-02-01"
      }
    },
    "computeNodeImages": {
      "CentOS_7.6": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.6",
        "version": "latest"
      }
    },
    "ClientVMsList": {
      "copy": [
        {
          "name": "items",
          "count": "[parameters('nodeCount')]",
          "input": {
            "name": "[concat(parameters('vmNameSuffix'),'-',copyIndex('items',1))]",
            "storageAccountType": "Premium_LRS",
            "osDiskSizeGB": 30,
            "nicName": "[concat(parameters('vmNameSuffix'),'-',copyIndex('items',1),'-NIC')]",
            "subnetId": "[variables('subnetId')]",
            "vmSize": "[parameters('VMSize')]",
            "privateIpAddress": "[concat(parameters('subnetIpAddressSuffix'),'.',add(copyIndex('items',1),sub(parameters('startIpAddress'),1)))]",
            "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets',variables('avSetInfo')[0].availabilitySetName)]",
            "imageInfo": "[variables('computeNodeImages')[parameters('VMImage')]]"
          }
        }
      ]
    },
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "faultDomains": 3,
    "updateDomains": 5,
    "managedDisksAligned": "yes",
    "vnetId": "[resourceId(parameters('vnetRg'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetId": "[concat(variables('vnetId'),'/subnets/', parameters('subnetName'))]",
    "avSetInfo": [
      {
        "managedDisksAligned": "yes",
        "availabilitySetName": "Clients-AvSet"
      }
    ]
  },
  "resources": [
    {
      "condition": true,
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSetInfo')[copyIndex()].availabilitySetName]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.availabilitySetApiVersion]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "avSetCopy",
        "count": "[length(variables('avSetInfo'))]"
      },
      "properties": {
        "platformFaultDomainCount": "[variables('faultDomains')]",
        "platformUpdateDomainCount": "[variables('updateDomains')]"
      },
      "sku": {
        "name": "[if(equals(variables('managedDisksAligned'),'yes'),'Aligned','Classic')]"
      }
    },
    {
      "condition": true,
      "comments": "Initial deployment of NICs - not attached to LB",
      "name": "[variables('ClientVMsList').items[copyIndex()].nicName]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.nicApiVersion]",
      "dependsOn": [
      ],
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('nodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ClientVMsList').items[copyIndex()].privateIpAddress]",
              "subnet": {
                "id": "[variables('ClientVMsList').items[copyIndex()].subnetId]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true,
        "primary": true
      }
    },
    {
      "condition": true,
      "comments": "Deploying virtual machines",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vmApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('ClientVMsList').items[copyIndex()].name]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "nicCopy",
        "avSetCopy"
      ],
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('nodeCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[variables('ClientVMsList').items[copyIndex()].availabilitySetId]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('ClientVMsList').items[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('ClientVMsList').items[copyIndex()].name,'.',parameters('dnsDomainName'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('ClientVMsList').items[copyIndex()].imageInfo]",
          "osDisk": {
            "name": "[concat(variables('ClientVMsList').items[copyIndex()].name,'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('ClientVMsList').items[copyIndex()].storageAccountType]"
            },
            "diskSizeGB": "[variables('ClientVMsList').items[copyIndex()].osDiskSizeGB]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('ClientVMsList').items[copyIndex()].nicName)]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    },
    {
      "condition": true,
      "comments": "Get Ip Address and Host Name for first VM",
      "name": "[concat('GetInfo',copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentConfig').apiVersions.deploymentApiVersion]",
      "dependsOn": [
        "vmCopy"
      ],
      "copy":{
        "name":"GetInfoCopy0",
        "count": 1
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources":[],
          "Outputs":{
            "ipAddress":{
              "type":"array",
              "value":[
                "[reference(resourceId('Microsoft.Network/networkInterfaces',variables('ClientVMsList').items[copyIndex()].nicName),variables('deploymentConfig').apiVersions.nicApiVersion,'Full').properties.ipconfigurations[0].properties.privateIpAddress]"
              ]
            },
            "hostName":{
              "type":"array",
              "value":[
                "[reference(resourceId('Microsoft.Compute/virtualMachines',variables('ClientVMsList').items[copyIndex()].name),variables('deploymentConfig').apiVersions.vmApiVersion,'Full').properties.osProfile.computerName]"
              ]
            }
          }
        }
      }
    },
    {
      "condition": true,
      "comments": "Get Ip Address and Host Name for subsequent VMs and build two lists, one for each",
      "name": "[concat('GetInfo',copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentConfig').apiVersions.deploymentApiVersion]",
      "dependsOn": [
        "GetInfoCopy0"
      ],
      "copy":{
        "name":"GetInfoCopyOthers",
        "count": "[sub(parameters('nodeCount'),1)]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources":[],
          "Outputs":{
            "ipAddress":{
              "type":"array",
              "value":[
                "[reference(resourceId('Microsoft.Network/networkInterfaces',variables('ClientVMsList').items[copyIndex(1)].nicName),variables('deploymentConfig').apiVersions.nicApiVersion,'Full').properties.ipconfigurations[0].properties.privateIpAddress]"
              ]
            },
            "hostName":{
              "type":"array",
              "value":[
                "[reference(resourceId('Microsoft.Compute/virtualMachines',variables('ClientVMsList').items[copyIndex(1)].name),variables('deploymentConfig').apiVersions.vmApiVersion,'Full').properties.osProfile.computerName]"
              ]
            },
            "ipAddressList":{
              "type":"array",
              "value":"[union(createArray(reference(resourceId('Microsoft.Network/networkInterfaces',variables('ClientVMsList').items[copyIndex(1)].nicName),variables('deploymentConfig').apiVersions.nicApiVersion,'Full').properties.ipconfigurations[0].properties.privateIpAddress),reference(resourceId('Microsoft.Resources/deployments',concat('GetInfo',copyIndex())),variables('deploymentConfig').apiVersions.deploymentApiVersion).outputs.ipAddress.value)]"
            },
            "hostNameList":{
              "type":"array",
              "value":"[union(createArray(reference(resourceId('Microsoft.Compute/virtualMachines',variables('ClientVMsList').items[copyIndex(1)].name),variables('deploymentConfig').apiVersions.vmApiVersion,'Full').properties.osProfile.computerName),reference(resourceId('Microsoft.Resources/deployments',concat('GetInfo',copyIndex())),variables('deploymentConfig').apiVersions.deploymentApiVersion).outputs.hostName.value)]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "ipAddresList":{
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments',concat('GetInfo',sub(parameters('nodeCount'),1))),variables('deploymentConfig').apiVersions.deploymentApiVersion).outputs.ipAddressList.value]"
    },
    "hostNameList":{
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments',concat('GetInfo',sub(parameters('nodeCount'),1))),variables('deploymentConfig').apiVersions.deploymentApiVersion).outputs.hostNameList.value]"
    }
  }
}